@using KerryShaleFanPage.Shared.Objects
@using System.Globalization
@page "/log"

<PageTitle>Log | Kerry Shale Fan Page</PageTitle>

<h1>Log</h1>

@if (_logEntries == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" AllowSorting="true" PageSize="5" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left"
                Data="@_logEntries" TItem="LogEntryDto" ColumnWidth="300px" ShowPagingSummary="true" IsLoading=@_isLoading Sort="@ShowLoadingAsync" Page="@ShowLoadingAsync" Group="@ShowLoadingAsync" Filter="@ShowLoadingAsync" 
                SelectionMode="DataGridSelectionMode.Single">
        <Columns>
            <RadzenDataGridColumn TItem="LogEntryDto" TextAlign="TextAlign.Left" Filterable="false" Frozen="true" Property="TimeStamp" Title="Time" Width="125px" >
                <Template Context="item">
                    <RadzenText TextStyle="TextStyle.Body2" class="py-2">@item.TimeStamp.ToUniversalTime().ToString("yyyy/MM/dd HH:mm:ss", CultureInfo.InvariantCulture)</RadzenText>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="LogEntryDto" TextAlign="TextAlign.Center" Filterable="false" Frozen="false" Property="LogLevel" Title="Level" Width="75px" >
                <Template Context="item">
                    <RadzenText TextStyle="TextStyle.Body2" class="py-2">@item.LogLevel</RadzenText>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="LogEntryDto" TextAlign="TextAlign.Left" Filterable="false" Frozen="false" Property="Logger" Title="Logger" Width="300px">
                <Template Context="item">
                    <RadzenText TextStyle="TextStyle.Body2" class="py-2">@item.Logger</RadzenText>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="LogEntryDto" TextAlign="TextAlign.Left" Filterable="false" Frozen="false" Property="Message" Title="Message" Width="300px">
                <Template Context="item">
                    <RadzenRow AlignItems="AlignItems.Stretch" Gap="5px">
                        <RadzenColumn Size=10 class="text-truncate">
                            <RadzenText TextStyle="TextStyle.Body2" class="py-2">@item.Message</RadzenText>
                        </RadzenColumn>
                        <RadzenColumn Size=2>
                            @if (!string.IsNullOrEmpty(item.Message))
                            {
                                <RadzenButton Icon="open_in_new" Size="ButtonSize.ExtraSmall" class="m-1 float-end" Click=@(() => ShowDialogAsync("Message", item.Message ?? string.Empty)) />
                            }
                        </RadzenColumn>
                    </RadzenRow>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="LogEntryDto" TextAlign="TextAlign.Left" Filterable="false" Frozen="false" Property="Exception" Title="Exception" Width="300px">
                <Template Context="item">
                    <RadzenRow AlignItems="AlignItems.Stretch" Gap="5px">
                        <RadzenColumn Size=10 class="text-truncate">
                            <RadzenText TextStyle="TextStyle.Body2" class="py-2">@item.Exception</RadzenText>
                        </RadzenColumn>
                        <RadzenColumn Size=2>
                            @if (!string.IsNullOrEmpty(item.Exception))
                            {
                                <RadzenButton Icon="open_in_new" Size="ButtonSize.ExtraSmall" class="m-1 float-end" Click=@(() => ShowDialogAsync("Exception", item.Exception ?? string.Empty)) />
                            }
                        </RadzenColumn>
                    </RadzenRow>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
}

@using KerryShaleFanPage.Shared.Enums
@using KerryShaleFanPage.Shared.Objects
@using System.Globalization
@page "/log"

<PageTitle>Log | Kerry Shale Fan Page</PageTitle>

<h1>Log</h1>

@if (_logEntries == null)
{
    <p><em>@Translate["Loading..."]</em></p>
}
else
{
    <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" AllowSorting="true" PageSize="5" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" GridLines="DataGridGridLines.Both"
                Data="@_logEntries" TItem="LogEntryDto" ShowPagingSummary="true" IsLoading=@_isLoading Sort="@ShowLoadingAsync" Page="@ShowLoadingAsync" Group="@ShowLoadingAsync" Filter="@ShowLoadingAsync" 
                SelectionMode="DataGridSelectionMode.Single" PageSizeOptions="@_pageSizeOptions" PageSizeText="@Translate["records per page"]" PagingSummaryFormat="@_pagingSummaryFormat" >
        <Columns>
            <RadzenDataGridColumn TItem="LogEntryDto" TextAlign="TextAlign.Left" Filterable="false" Frozen="true" Property="TimeStamp" Title="@Translate["TimeStamp"]" Width="180px" MinWidth="180px">
                <Template Context="item">
                    <RadzenText TextStyle="TextStyle.Body2" class="py-2">@item.TimeStamp.ToUniversalTime()</RadzenText>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="LogEntryDto" TextAlign="TextAlign.Center" Filterable="false" Frozen="false" Property="LogLevel" Title="@Translate["Level"]" Width="75px" MinWidth="75px">
                <Template Context="item">
                    <RadzenText TextStyle="TextStyle.Body2" class="py-2" style="@($"background-color: {GetBackColor(item.LogLevel)}; color: {GetFrontColor(item.LogLevel)};")">@item.LogLevel</RadzenText>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="LogEntryDto" TextAlign="TextAlign.Left" Filterable="false" Frozen="false" Property="Logger" Title="@Translate["Logger"]" Width="300px">
                <Template Context="item">
                    <RadzenRow AlignItems="AlignItems.Stretch" Gap="5px">
                        <RadzenColumn Size=10 class="text-truncate">
                            <RadzenText TextStyle="TextStyle.Body2" class="py-2">@((!string.IsNullOrEmpty(item.Logger)) ? item.Logger : "-")</RadzenText>
                        </RadzenColumn>
                        <RadzenColumn Size=2>
                            @if (!string.IsNullOrEmpty(item.Logger))
                            {
                                <RadzenButton Icon="open_in_new" Size="ButtonSize.ExtraSmall" class="m-1 float-end" Click=@(() => ShowDialogAsync("Logger", item.Logger ?? string.Empty)) />
                            }
                        </RadzenColumn>
                    </RadzenRow>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="LogEntryDto" TextAlign="TextAlign.Left" Filterable="false" Frozen="false" Property="Message" Title="@Translate["Message"]" Width="300px">
                <Template Context="item">
                    <RadzenRow AlignItems="AlignItems.Stretch" Gap="5px">
                        <RadzenColumn Size=10 class="text-truncate">
                            <RadzenText TextStyle="TextStyle.Body2" class="py-2">@((!string.IsNullOrEmpty(item.Message)) ? item.Message : "-")</RadzenText>
                        </RadzenColumn>
                        <RadzenColumn Size=2>
                            @if (!string.IsNullOrEmpty(item.Message))
                            {
                                <RadzenButton Icon="open_in_new" Size="ButtonSize.ExtraSmall" class="m-1 float-end" Click=@(() => ShowDialogAsync(@Translate["Message"], item.Message ?? string.Empty)) />
                            }
                        </RadzenColumn>
                    </RadzenRow>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="LogEntryDto" TextAlign="TextAlign.Left" Filterable="false" Frozen="false" Property="Exception" Title="@Translate["Exception"]" Width="300px">
                <Template Context="item">
                    <RadzenRow AlignItems="AlignItems.Stretch" Gap="5px">
                        <RadzenColumn Size=10 class="text-truncate">
                            <RadzenText TextStyle="TextStyle.Body2" class="py-2">@((!string.IsNullOrEmpty(item.Exception)) ? item.Exception : "-")</RadzenText>
                        </RadzenColumn>
                        <RadzenColumn Size=2>
                            @if (!string.IsNullOrEmpty(item.Exception))
                            {
                                <RadzenButton Icon="open_in_new" Size="ButtonSize.ExtraSmall" class="m-1 float-end" Click=@(() => ShowDialogAsync(Translate["Exception"], item.Exception ?? string.Empty)) />
                            }
                        </RadzenColumn>
                    </RadzenRow>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>

    <p>&nbsp;</p>

    <h2>@Translate["Web services quality"]</h2>

    <RadzenCard class="w-100">
        <RadzenChart>
            <RadzenLineSeries Smooth="true" Data="@_logChartSeries?.Where(e => e.LogLevel == LogLevelEnum.Critical)" TItem="ChartDataItem" CategoryProperty="MonthYear" Title="@Translate["Critical count"]" LineType="LineType.Solid" ValueProperty="Count" Stroke="@GetFrontColor(LogLevelEnum.Critical)">
                <RadzenMarkers MarkerType="MarkerType.Circle" />
                <RadzenSeriesDataLabels Visible="false" />
            </RadzenLineSeries>
            <RadzenLineSeries Smooth="true" Data="@_logChartSeries?.Where(e => e.LogLevel == LogLevelEnum.Error)" TItem="ChartDataItem" CategoryProperty="MonthYear" Title="@Translate["Error count"]" LineType="LineType.Solid" ValueProperty="Count" Stroke="@GetFrontColor(LogLevelEnum.Error)">
                <RadzenMarkers MarkerType="MarkerType.Circle" />
                <RadzenSeriesDataLabels Visible="false" />
            </RadzenLineSeries>
            <RadzenLineSeries Smooth="true" Data="@_logChartSeries?.Where(e => e.LogLevel == LogLevelEnum.Warn)" TItem="ChartDataItem" CategoryProperty="MonthYear" Title="@Translate["Warning count"]" LineType="LineType.Solid" ValueProperty="Count" Stroke="@GetFrontColor(LogLevelEnum.Warn)">
                <RadzenMarkers MarkerType="MarkerType.Circle" />
                <RadzenSeriesDataLabels Visible="false" />
            </RadzenLineSeries>
            <RadzenLineSeries Smooth="true" Data="@_logChartSeries?.Where(e => e.LogLevel == LogLevelEnum.Info)" TItem="ChartDataItem" CategoryProperty="MonthYear" Title="@Translate["Info count"]" LineType="LineType.Solid" ValueProperty="Count" Stroke="@GetFrontColor(LogLevelEnum.Info)">
                <RadzenMarkers MarkerType="MarkerType.Circle" />
                <RadzenSeriesDataLabels Visible="false" />
            </RadzenLineSeries>
            <RadzenLineSeries Smooth="true" Data="@_logChartSeries?.Where(e => e.LogLevel == LogLevelEnum.Debug)" TItem="ChartDataItem" CategoryProperty="MonthYear" Title="@Translate["Debug count"]" LineType="LineType.Solid" ValueProperty="Count" Stroke="@GetFrontColor(LogLevelEnum.Debug)">
                <RadzenMarkers MarkerType="MarkerType.Circle" />
                <RadzenSeriesDataLabels Visible="false" />
            </RadzenLineSeries>
            <RadzenLineSeries Smooth="true" Data="@_logChartSeries?.Where(e => e.LogLevel == LogLevelEnum.None)" TItem="ChartDataItem" CategoryProperty="MonthYear" Title="@Translate["None count"]" LineType="LineType.Solid" ValueProperty="Count" Stroke="@GetFrontColor(LogLevelEnum.None)">
                <RadzenMarkers MarkerType="MarkerType.Circle" />
                <RadzenSeriesDataLabels Visible="false" />
            </RadzenLineSeries>
            <RadzenCategoryAxis Padding="20" TickDistance="200" Formatter="@FormatAsMonthYear" />
            <RadzenValueAxis>
                <RadzenGridLines Visible="true" />
                <RadzenAxisTitle Text="@Translate["Count"]" />
            </RadzenValueAxis>
        </RadzenChart>
    </RadzenCard>
}

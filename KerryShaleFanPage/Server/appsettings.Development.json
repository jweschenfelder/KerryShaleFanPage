{
    "AppSettings": {
        "GeneralWebService": {
            "Enabled": true,
            "SwaggerEnabled": false
        },
        "MobileWebService": {
            "Enabled": true,
            "SwaggerEnabled": false
        },
        "GeneralMaintainance": {
            "Enabled": false,
            "Message": "",
            "MessageScrollEnabled": true
        },
        "MobileMaintainance": {
            "Enabled": false,
            "Message": "",
            "MessageScrollEnabled": true
        },
        "GeneralLogging": {
            "DeleteLogsEnabled": true,
            "DeleteLogsAfterDays": 30
        },
        "LoggingWebpage": {
            "Enabled": true,
            "MaximumLogEntriesEnabled": true,
            "MaximumLogEntriesCount": 250
        },
        "ContactFormWebpage": {
            "Enabled": true
        },
        "IsitrollingpodAtListenNotes": {
            "CrawlEnabled": true,
            "CrawlEveryHours": 12,
            "MailNotificationEnabled": true,
            "MailAddressesSemikolonSeparated": "",
            "ImageDownloadUploadEnabled": true
        },
        "IsitrollingpodAtSpotify": {
            "Backup": true,
            "CrawlEnabled": true,
            "CrawlEveryHours": 12,
            "MailNotificationEnabled": true,
            "MailAddressesSemikolonSeparated": "",
            "ImageDownloadUploadEnabled": true
        },
        "IsitrollingpodAtTwitter": {
            "Backup": false,
            "CrawlEnabled": false,
            "CrawlEveryHours": 12,
            "MailNotificationEnabled": false,
            "MailAddressesSemikolonSeparated": "",
            "ImageDownloadUploadEnabled": false
        }
    },
    "ConnectionStrings": {
        "Storage": "server=127.0.0.1;database=kerryshalefanpg;uid={username};pwd={password};"
    },
    "AllowedHosts": "*",
    "Logging": {
        "LogLevel": {
            "Default": "Information",
            "Microsoft": "Warning",
            "Microsoft.AspNetCore": "Warning",
            "Microsoft.AspNetCore.*": "Warning",
            "Microsoft.AspNetCore.DataProtection": "Warning",
            "Microsoft.AspNetCore.HostFiltering": "Warning",
            "Microsoft.AspNetCore.Hosting": "Warning",
            "Microsoft.AspNetCore.Hosting.Diagnostics": "Warning",
            "Microsoft.AspNetCore.Mvc": "Warning",
            "Microsoft.AspNetCore.Routing": "Warning",
            "Microsoft.AspNetCore.Server": "Warning",
            "Microsoft.AspNetCore.StaticFiles": "Warning",
            "Microsoft.EntityFrameworkCore": "Warning",
            "Microsoft.Hosting.Lifetime": "Warning"
        }
    },
    "NLog": {
        "internalLogLevel": "Warn",
        "internalLogFile": "internal-nlog.txt",
        "extensions": [
            { "assembly": "NLog.Extensions.Logging" },
            { "assembly": "NLog.Web.AspNetCore" }
        ],
        "targets": {
            "allFile": {
                "type": "File",
                "fileName": "nlog-all-${shortdate}.log",
                "layout": "${longdate}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}"
            },
            "allDatabase": {
                "type": "Database",
                "keepConnection": false,
                "dbProvider": "MySql.Data.MySqlClient.MySqlConnection, MySql.Data",
                "connectionString": "server=127.0.0.1;database=kerryshalefanpg;uid={username};pwd={password};",
                "commandText": "INSERT INTO logentries (Created,CreatedBy,Modified,ModifiedBy,TimeStamp,LogLevel,Logger,Message,Exception) VALUES (@Created,@CreatedBy,@Modified,@ModifiedBy,@TimeStamp,@LogLevel,@Logger,@Message,@Exception)",
                "parameters": [
                    {
                        "name": "@Created",
                        "layout": "${date}"
                    },
                    {
                        "name": "@CreatedBy",
                        "layout": "NLog"
                    },
                    {
                        "name": "@Modified",
                        "layout": "${date}"
                    },
                    {
                        "name": "@ModifiedBy",
                        "layout": "NLog"
                    },
                    {
                        "name": "@TimeStamp",
                        "layout": "${date}"
                    },
                    {
                        "name": "@LogLevel",
                        "layout": "${level}"
                    },
                    {
                        "name": "@Logger",
                        "layout": "${logger:truncate=255}"
                    },
                    {
                        "name": "@Message",
                        "layout": "${message:truncate=1024}"
                    },
                    {
                        "name": "@Exception",
                        "layout": "${exception:tostring:truncate=1024}"
                    }
                ]
            }
        },
        "rules": [
            {
                "logger": "*",
                "minLevel": "Warn",
                "writeTo": "allFile"
            },
            {
                "logger": "*",
                "minLevel": "Warn",
                "writeTo": "allDatabase"
            },
            {
                "logger": "Microsoft.AspNetCore",
                "minLevel": "Warn",
                "final": "true"
            },
            {
                "logger": "Microsoft.AspNetCore.*",
                "minLevel": "Warn",
                "final": "true"
            }
        ]
    }
}
